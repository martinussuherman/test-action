# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - test
      - another

  release:
    types: 
      - published
      - edited

env:
  IMAGE_NAME: test-action

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get image id and version
      run: |
        IMG_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        IMG_URL=https://$IMAGE_NAME
          
        # Change all uppercase to lowercase
        IMG_ID=$(echo $IMG_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo "::set-env name=IMAGE_ID::$IMG_ID"
        echo "::set-env name=IMAGE_VERSION::$VERSION"
        echo "::set-env name=IMAGE_URL::$IMG_URL"

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Repo="${{ github.repository	}}"
        echo Ref="${{ github.ref }}"
        echo Actor="${{ github.actor }}"
        echo Workspace="${{ github.workspace }}"
        echo Sha="${{ github.sha }}"
        echo Rev=$(git rev-parse --short ${{ github.sha }})
        echo BuildDate=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
    - name: Display variables
      run: |
        echo IMAGE_URL=${{ env.IMAGE_URL }}
        echo IMAGE_ID=${{ env.IMAGE_ID }}
        echo VERSION=${{ env.IMAGE_VERSION }}
        echo IMAGE_NAME=${{ env.IMAGE_NAME }}
        echo tag=$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
